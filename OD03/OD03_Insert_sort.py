# Функция для сортировки вставками (Insertion Sort)
def insert_sort(arr):
    for i in range(1, len(arr)):
        key = arr[i]
        j = i - 1
        while j >= 0 and arr[j][1] > key[1]:  # Сравниваем по остатку денег (второй элемент)
            arr[j + 1] = arr[j]
            j -= 1
        arr[j + 1] = key
    return arr



if __name__ == "__main__":
    incomes = {
        "Январь": 45000,
        "Февраль": 42000,
        "Март": 43000,
        "Апрель": 41000,
        "Май": 48000,
        "Июнь": 46000,
        "Июль": 47000,
        "Август": 44000,
        "Сентябрь": 45500,
        "Октябрь": 43000,
        "Ноябрь": 49000,
        "Декабрь": 51000
    }

    expenses = {
        "Январь": 25000,
        "Февраль": 22000,
        "Март": 23000,
        "Апрель": 21000,
        "Май": 28000,
        "Июнь": 26000,
        "Июль": 27000,
        "Август": 24000,
        "Сентябрь": 25500,
        "Октябрь": 23000,
        "Ноябрь": 29000,
        "Декабрь": 31000
    }

    # Рассчитываем остаток денег за каждый месяц (доходы минус расходы)
    balance = {month: incomes[month] - expenses[month] for month in incomes}

    # Преобразуем словарь с остатками в список кортежей для сортировки
    balance_list = list(balance.items())

    # Сортировка остатков с помощью сортировки вставками
    sorted_balance = insert_sort(balance_list)

    # Вывод исходных данных
    print("Исходные данные (месяц: остаток):")
    for month, bal in balance.items():
        print(f"{month}: {bal} руб.")

    # Вывод отсортированных данных
    print("\nОтсортированные данные (по возрастанию остатка):")
    for month, bal in sorted_balance:
        print(f"{month}: {bal} руб.")
